#!/usr/bin/env php
<?php
if (file_exists(__DIR__.'/vendor/autoload.php')) {
    $autoloaderPath = __DIR__.'/vendor/autoload.php';
} elseif (file_exists(__DIR__.'/../vendor/autoload.php')) {
    $autoloaderPath = __DIR__ . '/../vendor/autoload.php';
} elseif (file_exists(__DIR__.'/../../../autoload.php')) {
    $autoloaderPath = __DIR__ . '/../../../autoload.php';
} else {
    die('Could not find autoload.php');
}
$classLoader = require $autoloaderPath;

$getOpt = new \GetOpt\GetOpt([
    ['s', 'secrets_manager_class', \GetOpt\GetOpt::REQUIRED_ARGUMENT, 'Set the SecretsManager class (without namespace).'],
    ['p', 'secrets_provider_class', \GetOpt\GetOpt::REQUIRED_ARGUMENT, 'Set the SecretsProvider class (without namespace).'],
], [\GetOpt\GetOpt::SETTING_STRICT_OPERANDS => true]);

$getOpt->addCommands([\GetOpt\Command::create('printenv', 'secrets_manager_printenv')]);
$getOpt->addCommands([\GetOpt\Command::create('checkvalues', 'secrets_manager_checkvalues')]);

$getOpt->process();
$options = $getOpt->getOptions();
$operands = $getOpt->getOperands();
$command = $getOpt->getCommand();

// show help and quit
if (!$command || $getOpt->getOption('help')) {
    echo $getOpt->getHelpText();
    exit;
}

if (isset($options['secrets_manager_class'])) {
    $project_settings = new CivicActions\ProjectSettings\ProjectSettings();
    $secrets_class = 'CivicActions\ProjectSettings\\' . $options['secrets_manager_class'];
}
else {
    $project_settings = new CivicActions\ProjectSettings\ProjectSettings('environments');
    $secrets_class = 'CivicActions\ProjectSettings\SampleSecretsManager';
}

try {
    $secrets_manager = new $secrets_class($project_settings);

    if (isset($options['secrets_provider_class'])) {
        /* @var \CivicActions\ProjectSettings\SecretsManager $secrets_manager */
        $secrets_manager->setSecretsProviderClass($options['secrets_provider_class']);
    }


    switch ($command->getHandler()) {
        case 'secrets_manager_printenv':
            $secrets_manager->getSecrets();
            break;
        case 'secrets_manager_checkvalues':
            $secrets_manager->checkSecretValues();
            break;
    }
} catch (Exception $exception) {
    echo $exception->getMessage() . "\n";
}
